{"remainingRequest":"D:\\uinapp\\vue-cloud-disk\\node_modules\\thread-loader\\dist\\cjs.js!D:\\uinapp\\vue-cloud-disk\\node_modules\\babel-loader\\lib\\index.js!D:\\uinapp\\vue-cloud-disk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\uinapp\\vue-cloud-disk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\uinapp\\vue-cloud-disk\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\uinapp\\vue-cloud-disk\\src\\views\\Register.vue","mtime":1627546108249},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628037320207},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1628037317753},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\babel-loader\\lib\\index.js","mtime":1628037337839},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628037320207},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\vue-loader\\lib\\index.js","mtime":1628037334930}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Register\",\n  data: function data() {\n    var _this = this;\n\n    var name = function name(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入账号'));\n      } else if (value.length < 3) {\n        callback(new Error('至少位三个字符'));\n      } else {\n        callback();\n      }\n    };\n\n    var pass = function pass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('至少位六个字符'));\n      } else {\n        callback();\n      }\n    };\n\n    var repass = function repass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value !== _this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    var phone = function phone(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入手机号'));\n      } else if (value.length !== 11) {\n        callback(new Error('请输入正确的手机号'));\n      } else {\n        callback();\n      }\n    };\n\n    var yzm = function yzm(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入验证码'));\n      } else if (value.length !== 6) {\n        callback(new Error('请输入6位数字验证码'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      loading: false,\n      ruleForm: {\n        name: '',\n        pass: '',\n        repass: '',\n        yzm: '',\n        phone: '',\n        loading_text: ''\n      },\n      rules: {\n        name: [{\n          validator: name,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: pass,\n          trigger: 'blur'\n        }],\n        repass: [{\n          validator: repass,\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: phone,\n          trigger: 'blur'\n        }] // yzm:[ { validator: yzm, trigger: 'blur' }]\n\n      }\n    };\n  },\n  methods: {\n    login: function login() {\n      this.$router.push({\n        path: '/'\n      });\n    },\n    register: function register(ruleForm) {\n      var _this2 = this;\n\n      this.$refs[ruleForm].validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n          _this2.loading_text = '正在注册，请稍后';\n\n          _this2.$http.post(_this2.$HOST + \"v1/register\", _this2.$qs.stringify({\n            \"username\": _this2.ruleForm.name,\n            \"password\": _this2.ruleForm.pass,\n            \"phone\": _this2.ruleForm.phone,\n            \"code\": _this2.ruleForm.yzm,\n            \"sign\": _this2.$sign\n          })).then(function (res) {\n            if (res.data.code == 0) {\n              _this2.$alert('注册成功', '提示', {\n                confirmButtonText: '确定',\n                callback: function callback(action) {\n                  _this2.$router.push({\n                    path: '/'\n                  });\n                }\n              });\n            } else if (res.data.code == 1) {\n              _this2.loading = false;\n\n              _this2.$refs[ruleForm].resetFields();\n\n              _this2.$alert('注册失败', '提示', {\n                confirmButtonText: '确定'\n              });\n            } else if (res.data.code == 2) {\n              _this2.loading = false;\n\n              _this2.$refs[ruleForm].resetFields();\n\n              _this2.$alert('用户名已存在', '提示', {\n                confirmButtonText: '确定'\n              });\n            }\n          });\n        } else if (res.data.code == 2) {\n          _this2.loading = false;\n\n          _this2.$refs[ruleForm].resetFields();\n\n          _this2.$alert('验证码错误', '提示', {\n            confirmButtonText: '确定'\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    home: function home() {\n      this.$router.push({\n        path: '/'\n      });\n    },\n    resetForm: function resetForm(ruleForm) {\n      this.$refs[ruleForm].resetFields();\n    },\n    getcode: function getcode(ruleForm) {\n      var _this3 = this;\n\n      this.$refs[ruleForm].validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n          _this3.loading_text = '正在发送验证码';\n\n          if (_this3.ruleForm.phone.length !== 11) {\n            _this3.$alert('请输入正确的手机格式', '提示', {\n              confirmButtonText: '确定'\n            });\n          } else {\n            _this3.$http.post(_this3.$HOST + 'v1/yzm', _this3.$qs.stringify({\n              \"phone\": _this3.ruleForm.phone,\n              \"sign\": _this3.$sign\n            })).then(function (res) {\n              if (res.data.code == 0) {\n                _this3.loading = false;\n\n                _this3.$alert('发送成功', '提示', {\n                  confirmButtonText: '确定'\n                });\n              }\n            });\n          }\n        } else {\n          return;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"main\">\n\n                <el-card class=\"box-card\"   v-loading=\"loading\" :element-loading-text=\"loading_text\" >\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>注册</span>\n                        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"login\">已经有账号？去登陆\n                        </el-button>\n                    </div>\n                    <el-row type=\"flex\" justify=\"center\" >\n                        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" class=\"demo-ruleForm\">\n                            <el-form-item  prop=\"name\" >\n                                <el-input v-model=\"ruleForm.name\" placeholder=\"账号\"></el-input>\n                            </el-form-item>\n                            <el-form-item prop=\"pass\">\n                                <el-input v-model=\"ruleForm.pass\" show-password placeholder=\"密码\" ></el-input>\n                            </el-form-item>\n                            <el-form-item prop=\"repass\">\n                                <el-input v-model=\"ruleForm.repass\" show-password placeholder=\"确认密码\" ></el-input>\n                            </el-form-item>\n\n                          <el-form-item prop=\"phone\">\n                            <el-col :span=\"16\">\n                              <el-input v-model=\"ruleForm.phone\" style=\"width: 100%;\" placeholder=\"手机号码\" ></el-input>\n                            </el-col>\n                            <el-col :span=\"8\">\n                              <el-button type=\"primary\" @click=\"getcode('ruleForm')\" id=\"yzm\" style=\"width: 100%;\" >获取验证码</el-button >\n                            </el-col>\n                          </el-form-item>\n                          <el-form-item  prop=\"yzm\" id=\"yzm\">\n                            <el-input v-model=\"ruleForm.yzm\"placeholder=\"手机验证码\"></el-input>\n                          </el-form-item>\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"register('ruleForm')\" class=\"register\">注册</el-button>\n                            </el-form-item>\n                        </el-form>\n\n\n                    </el-row>\n                </el-card>\n\n\n\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: \"Register\",\n        data() {\n\n            var name = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入账号'));\n                } else if (value.length<3) {\n                    callback(new Error('至少位三个字符'));\n                } else {\n                    callback();\n                }\n            };\n            var pass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else if (value.length<6) {\n                    callback(new Error('至少位六个字符'));\n                } else {\n                    callback();\n                }\n            };\n            var repass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n    var phone= (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入手机号'));\n      } else if (value.length!==11) {\n        callback(new Error('请输入正确的手机号'));\n      } else {\n        callback();\n      }\n    };\n\n          var yzm= (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('请输入验证码'));\n            } else if (value.length!==6) {\n              callback(new Error('请输入6位数字验证码'));\n            } else {\n              callback();\n            }\n          };\n            return {\n              loading:false,\n                ruleForm: {\n                    name: '',\n                    pass:'',\n                    repass:'',\n                    yzm:'',\n                    phone:'',\n                  loading_text:''\n\n                },\n                rules: {\n                    name: [\n                        { validator: name, trigger: 'blur' },\n\n                    ],\n                    pass: [\n                        { validator: pass, trigger: 'blur' },\n                    ],\n                    repass:[\n                        { validator: repass, trigger: 'blur' },\n                    ],\n                  phone: [\n                    { validator: phone, trigger: 'blur' }\n                    ],\n                  // yzm:[ { validator: yzm, trigger: 'blur' }]\n\n                }\n            }\n        }\n        ,\n        methods: {\n            login() {\n                this.$router.push({path:'/'})\n            },\n            register(ruleForm){\n\n                this.$refs[ruleForm].validate((valid) => {\n\n                        if (valid) {\n                          this.loading=true\n                          this.loading_text='正在注册，请稍后'\n                             this.$http.post(this.$HOST+\"v1/register\", this.$qs.stringify({\n                                \"username\": this.ruleForm.name,\n                                \"password\": this.ruleForm.pass,\n                                \"phone\":this.ruleForm.phone,\n                                \"code\":this.ruleForm.yzm,\n                                \"sign\":this.$sign\n                            })).then(res => {\n                             if(res.data.code==0){\n                               this.$alert('注册成功', '提示', {\n                                 confirmButtonText: '确定',\n                                 callback: action => {\n                                   this.$router.push({path:'/'})\n                                 }\n\n                               })\n\n                             }\n                        else if(res.data.code==1){\n                          this.loading=false\n                                 this.$refs[ruleForm].resetFields();\n                               this.$alert('注册失败', '提示', {\n                                 confirmButtonText: '确定',\n                               })\n                             }\n                             else if(res.data.code==2){\n                               this.loading=false\n                                 this.$refs[ruleForm].resetFields();\n                               this.$alert('用户名已存在', '提示', {\n                                 confirmButtonText: '确定',\n                               })\n                             }\n                            })\n                        }\n                        else if(res.data.code==2){\n                          this.loading=false\n                          this.$refs[ruleForm].resetFields();\n                          this.$alert('验证码错误', '提示', {\n                            confirmButtonText: '确定',\n                          })\n                        }\n\n                      else {\n                            console.log('error submit!!');\n                            return false;\n                        }\n            })\n            },\n            home(){\n                this.$router.push({path:'/'})\n            },\n       resetForm(ruleForm){\n        this.$refs[ruleForm].resetFields();\n    },\n          getcode(ruleForm) {\n            this.$refs[ruleForm].validate((valid) => {\n              if (valid) {\n                this.loading=true\n                this.loading_text='正在发送验证码'\n                if (this.ruleForm.phone.length !== 11) {\n                  this.$alert('请输入正确的手机格式', '提示', {\n                    confirmButtonText: '确定',\n                  })\n                } else {\n                  this.$http.post(this.$HOST + 'v1/yzm', this.$qs.stringify({\n                    \"phone\": this.ruleForm.phone,\n                    \"sign\": this.$sign\n                  })).then(res => {\n                    if (res.data.code == 0) {\n                      this.loading=false\n                      this.$alert('发送成功', '提示', {\n                        confirmButtonText: '确定',\n                      })\n                    }\n                  })\n                }\n              }\n              else{\n                return\n              }\n            })\n\n\n          }}\n    }\n</script>\n\n<style scoped>\n\n    a{\n        color: white;\n        text-decoration: none;\n    }\n    a:hover{\n        color: gray;\n    }\r\n\t.main{\r\n\t  background:url(\"../assets/bg.jpg\") no-repeat;\r\n\t  width:100%;\r\n\t  height:100%;\r\n\t  background-size:100%100%;\r\n\t}\n    .box-card{\n      max-width: 400px;\n      min-width: 320px;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%,-50%);\n\n    }\n  .register{\n    width: 100%;\n  }\n</style>\n"],"sourceRoot":"src/views"}]}