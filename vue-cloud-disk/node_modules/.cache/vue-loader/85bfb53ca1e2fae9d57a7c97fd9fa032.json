{"remainingRequest":"D:\\uinapp\\vue-cloud-disk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\uinapp\\vue-cloud-disk\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\uinapp\\vue-cloud-disk\\src\\views\\Register.vue","mtime":1627546108249},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628037320207},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\babel-loader\\lib\\index.js","mtime":1628037337839},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628037320207},{"path":"D:\\uinapp\\vue-cloud-disk\\node_modules\\vue-loader\\lib\\index.js","mtime":1628037334930}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    name: \"Register\",\n    data() {\n\n        var name = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入账号'));\n            } else if (value.length<3) {\n                callback(new Error('至少位三个字符'));\n            } else {\n                callback();\n            }\n        };\n        var pass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else if (value.length<6) {\n                callback(new Error('至少位六个字符'));\n            } else {\n                callback();\n            }\n        };\n        var repass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else if (value !== this.ruleForm.pass) {\n                callback(new Error('两次输入密码不一致!'));\n            } else {\n                callback();\n            }\n        };\nvar phone= (rule, value, callback) => {\n  if (value === '') {\n    callback(new Error('请输入手机号'));\n  } else if (value.length!==11) {\n    callback(new Error('请输入正确的手机号'));\n  } else {\n    callback();\n  }\n};\n\n      var yzm= (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入验证码'));\n        } else if (value.length!==6) {\n          callback(new Error('请输入6位数字验证码'));\n        } else {\n          callback();\n        }\n      };\n        return {\n          loading:false,\n            ruleForm: {\n                name: '',\n                pass:'',\n                repass:'',\n                yzm:'',\n                phone:'',\n              loading_text:''\n\n            },\n            rules: {\n                name: [\n                    { validator: name, trigger: 'blur' },\n\n                ],\n                pass: [\n                    { validator: pass, trigger: 'blur' },\n                ],\n                repass:[\n                    { validator: repass, trigger: 'blur' },\n                ],\n              phone: [\n                { validator: phone, trigger: 'blur' }\n                ],\n              // yzm:[ { validator: yzm, trigger: 'blur' }]\n\n            }\n        }\n    }\n    ,\n    methods: {\n        login() {\n            this.$router.push({path:'/'})\n        },\n        register(ruleForm){\n\n            this.$refs[ruleForm].validate((valid) => {\n\n                    if (valid) {\n                      this.loading=true\n                      this.loading_text='正在注册，请稍后'\n                         this.$http.post(this.$HOST+\"v1/register\", this.$qs.stringify({\n                            \"username\": this.ruleForm.name,\n                            \"password\": this.ruleForm.pass,\n                            \"phone\":this.ruleForm.phone,\n                            \"code\":this.ruleForm.yzm,\n                            \"sign\":this.$sign\n                        })).then(res => {\n                         if(res.data.code==0){\n                           this.$alert('注册成功', '提示', {\n                             confirmButtonText: '确定',\n                             callback: action => {\n                               this.$router.push({path:'/'})\n                             }\n\n                           })\n\n                         }\n                    else if(res.data.code==1){\n                      this.loading=false\n                             this.$refs[ruleForm].resetFields();\n                           this.$alert('注册失败', '提示', {\n                             confirmButtonText: '确定',\n                           })\n                         }\n                         else if(res.data.code==2){\n                           this.loading=false\n                             this.$refs[ruleForm].resetFields();\n                           this.$alert('用户名已存在', '提示', {\n                             confirmButtonText: '确定',\n                           })\n                         }\n                        })\n                    }\n                    else if(res.data.code==2){\n                      this.loading=false\n                      this.$refs[ruleForm].resetFields();\n                      this.$alert('验证码错误', '提示', {\n                        confirmButtonText: '确定',\n                      })\n                    }\n\n                  else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n        })\n        },\n        home(){\n            this.$router.push({path:'/'})\n        },\n   resetForm(ruleForm){\n    this.$refs[ruleForm].resetFields();\n},\n      getcode(ruleForm) {\n        this.$refs[ruleForm].validate((valid) => {\n          if (valid) {\n            this.loading=true\n            this.loading_text='正在发送验证码'\n            if (this.ruleForm.phone.length !== 11) {\n              this.$alert('请输入正确的手机格式', '提示', {\n                confirmButtonText: '确定',\n              })\n            } else {\n              this.$http.post(this.$HOST + 'v1/yzm', this.$qs.stringify({\n                \"phone\": this.ruleForm.phone,\n                \"sign\": this.$sign\n              })).then(res => {\n                if (res.data.code == 0) {\n                  this.loading=false\n                  this.$alert('发送成功', '提示', {\n                    confirmButtonText: '确定',\n                  })\n                }\n              })\n            }\n          }\n          else{\n            return\n          }\n        })\n\n\n      }}\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"main\">\n\n                <el-card class=\"box-card\"   v-loading=\"loading\" :element-loading-text=\"loading_text\" >\n                    <div slot=\"header\" class=\"clearfix\">\n                        <span>注册</span>\n                        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"login\">已经有账号？去登陆\n                        </el-button>\n                    </div>\n                    <el-row type=\"flex\" justify=\"center\" >\n                        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" class=\"demo-ruleForm\">\n                            <el-form-item  prop=\"name\" >\n                                <el-input v-model=\"ruleForm.name\" placeholder=\"账号\"></el-input>\n                            </el-form-item>\n                            <el-form-item prop=\"pass\">\n                                <el-input v-model=\"ruleForm.pass\" show-password placeholder=\"密码\" ></el-input>\n                            </el-form-item>\n                            <el-form-item prop=\"repass\">\n                                <el-input v-model=\"ruleForm.repass\" show-password placeholder=\"确认密码\" ></el-input>\n                            </el-form-item>\n\n                          <el-form-item prop=\"phone\">\n                            <el-col :span=\"16\">\n                              <el-input v-model=\"ruleForm.phone\" style=\"width: 100%;\" placeholder=\"手机号码\" ></el-input>\n                            </el-col>\n                            <el-col :span=\"8\">\n                              <el-button type=\"primary\" @click=\"getcode('ruleForm')\" id=\"yzm\" style=\"width: 100%;\" >获取验证码</el-button >\n                            </el-col>\n                          </el-form-item>\n                          <el-form-item  prop=\"yzm\" id=\"yzm\">\n                            <el-input v-model=\"ruleForm.yzm\"placeholder=\"手机验证码\"></el-input>\n                          </el-form-item>\n                            <el-form-item>\n                                <el-button type=\"primary\" @click=\"register('ruleForm')\" class=\"register\">注册</el-button>\n                            </el-form-item>\n                        </el-form>\n\n\n                    </el-row>\n                </el-card>\n\n\n\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: \"Register\",\n        data() {\n\n            var name = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入账号'));\n                } else if (value.length<3) {\n                    callback(new Error('至少位三个字符'));\n                } else {\n                    callback();\n                }\n            };\n            var pass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else if (value.length<6) {\n                    callback(new Error('至少位六个字符'));\n                } else {\n                    callback();\n                }\n            };\n            var repass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n    var phone= (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入手机号'));\n      } else if (value.length!==11) {\n        callback(new Error('请输入正确的手机号'));\n      } else {\n        callback();\n      }\n    };\n\n          var yzm= (rule, value, callback) => {\n            if (value === '') {\n              callback(new Error('请输入验证码'));\n            } else if (value.length!==6) {\n              callback(new Error('请输入6位数字验证码'));\n            } else {\n              callback();\n            }\n          };\n            return {\n              loading:false,\n                ruleForm: {\n                    name: '',\n                    pass:'',\n                    repass:'',\n                    yzm:'',\n                    phone:'',\n                  loading_text:''\n\n                },\n                rules: {\n                    name: [\n                        { validator: name, trigger: 'blur' },\n\n                    ],\n                    pass: [\n                        { validator: pass, trigger: 'blur' },\n                    ],\n                    repass:[\n                        { validator: repass, trigger: 'blur' },\n                    ],\n                  phone: [\n                    { validator: phone, trigger: 'blur' }\n                    ],\n                  // yzm:[ { validator: yzm, trigger: 'blur' }]\n\n                }\n            }\n        }\n        ,\n        methods: {\n            login() {\n                this.$router.push({path:'/'})\n            },\n            register(ruleForm){\n\n                this.$refs[ruleForm].validate((valid) => {\n\n                        if (valid) {\n                          this.loading=true\n                          this.loading_text='正在注册，请稍后'\n                             this.$http.post(this.$HOST+\"v1/register\", this.$qs.stringify({\n                                \"username\": this.ruleForm.name,\n                                \"password\": this.ruleForm.pass,\n                                \"phone\":this.ruleForm.phone,\n                                \"code\":this.ruleForm.yzm,\n                                \"sign\":this.$sign\n                            })).then(res => {\n                             if(res.data.code==0){\n                               this.$alert('注册成功', '提示', {\n                                 confirmButtonText: '确定',\n                                 callback: action => {\n                                   this.$router.push({path:'/'})\n                                 }\n\n                               })\n\n                             }\n                        else if(res.data.code==1){\n                          this.loading=false\n                                 this.$refs[ruleForm].resetFields();\n                               this.$alert('注册失败', '提示', {\n                                 confirmButtonText: '确定',\n                               })\n                             }\n                             else if(res.data.code==2){\n                               this.loading=false\n                                 this.$refs[ruleForm].resetFields();\n                               this.$alert('用户名已存在', '提示', {\n                                 confirmButtonText: '确定',\n                               })\n                             }\n                            })\n                        }\n                        else if(res.data.code==2){\n                          this.loading=false\n                          this.$refs[ruleForm].resetFields();\n                          this.$alert('验证码错误', '提示', {\n                            confirmButtonText: '确定',\n                          })\n                        }\n\n                      else {\n                            console.log('error submit!!');\n                            return false;\n                        }\n            })\n            },\n            home(){\n                this.$router.push({path:'/'})\n            },\n       resetForm(ruleForm){\n        this.$refs[ruleForm].resetFields();\n    },\n          getcode(ruleForm) {\n            this.$refs[ruleForm].validate((valid) => {\n              if (valid) {\n                this.loading=true\n                this.loading_text='正在发送验证码'\n                if (this.ruleForm.phone.length !== 11) {\n                  this.$alert('请输入正确的手机格式', '提示', {\n                    confirmButtonText: '确定',\n                  })\n                } else {\n                  this.$http.post(this.$HOST + 'v1/yzm', this.$qs.stringify({\n                    \"phone\": this.ruleForm.phone,\n                    \"sign\": this.$sign\n                  })).then(res => {\n                    if (res.data.code == 0) {\n                      this.loading=false\n                      this.$alert('发送成功', '提示', {\n                        confirmButtonText: '确定',\n                      })\n                    }\n                  })\n                }\n              }\n              else{\n                return\n              }\n            })\n\n\n          }}\n    }\n</script>\n\n<style scoped>\n\n    a{\n        color: white;\n        text-decoration: none;\n    }\n    a:hover{\n        color: gray;\n    }\r\n\t.main{\r\n\t  background:url(\"../assets/bg.jpg\") no-repeat;\r\n\t  width:100%;\r\n\t  height:100%;\r\n\t  background-size:100%100%;\r\n\t}\n    .box-card{\n      max-width: 400px;\n      min-width: 320px;\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      transform: translate(-50%,-50%);\n\n    }\n  .register{\n    width: 100%;\n  }\n</style>\n"]}]}